import{gameData}from"../../Consts/gameData.js";class AudioManager{constructor(t,i){this.audioContext=t,this.gainNode=i,this.currentAudio={config:{startTime:0},audio:[]}}playAudio(t,i=1,o=!1){const a=this.audioContext.createBufferSource();a.buffer=t,a.loop=o,i=gameData.isMute?0:i,this.gainNode.gain.value=i,a.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),o?(a.start(0,this.currentAudio.config.startTime),this.currentAudio.audio.push(a)):a.start()}stopCurrentAudio(){this.currentAudio.audio&&this.currentAudio.audio.forEach((t=>{this.currentAudio.config.startTime=this.audioContext.currentTime,t.stop(),this.currentAudio.audio=[]}))}resetManager(){this.stopCurrentAudio(),this.audioContext=null,this.gainNode=null}reloadManager(){this.currentAudio={config:{startTime:0},audio:[]}}}export{AudioManager};