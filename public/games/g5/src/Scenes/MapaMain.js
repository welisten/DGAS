import{mainUserInterface,level1}from"../Consts/SceneKeys.js";import{mapMain_key,mapMain_URL,mapMain_tilesetObjConfig,mapMainLayers_ID,objectsLayers_keys}from"../Consts/MapKeys.js";import{userCharacter_objConfig}from"../Consts/CharacterKeys.js";import{mapMainSongs}from"../Consts/SongsKey.js";import{mapMain_scale,character_scale,containerGame_height,containerGame_width}from"../Consts/Sizes.js";import{character_velocity,character_AnimationFrameRate}from"../Consts/Difficulty.js";import{userCharacter_animationsKey,lifeBart_animationsKey}from"../Consts/Animations.js";import{lifeBar}from"../Consts/SpriteSheets.js";import{colors}from"../Consts/Colors.js";import{addToUIQueue}from"../Scenes/UI.js";import{gameState,playerState,userIterfaceState,updateStates}from"../Consts/GameStateObj.js";import{level_data}from"../Consts/LevelStatesObj.js";export default class MapaMain extends Phaser.Scene{constructor(){super({key:"mapaMain"})}preload(){this.load.tilemapTiledJSON(mapMain_key,mapMain_URL,null,Phaser.Tilemaps.TILLED_JSON),this.load.image(mapMain_tilesetObjConfig[0].key,mapMain_tilesetObjConfig[0].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[1].key,mapMain_tilesetObjConfig[1].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[2].key,mapMain_tilesetObjConfig[2].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[3].key,mapMain_tilesetObjConfig[3].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[4].key,mapMain_tilesetObjConfig[4].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[5].key,mapMain_tilesetObjConfig[5].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[6].key,mapMain_tilesetObjConfig[6].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[7].key,mapMain_tilesetObjConfig[7].url,{frameWidth:16}),this.load.image(mapMain_tilesetObjConfig[8].key,mapMain_tilesetObjConfig[8].url,{frameWidth:16})}init(){const e=this.sys.game.canvas;e.id="jogo5_canvas",e.style.border=`5px solid ${colors.main_color}`,e.style.borderRadius="20px",this.timerUi=0}create(){this.sound.play(mapMainSongs.mapaMain_theme.key,{volume:gameState.General_songs_volume});const e=this.add.timeline([{at:0,run:()=>this.cameras.main.fadeIn(1500,0,0,0)},{at:1500,run:()=>{addToUIQueue("...Ola, seja Bemvindo ao Encantos da Floresta ! Essa é a cidade de Guapimirim, e será nela que nós teremos nossas aventuras\n","justify")}},{from:10700,run:()=>{gameState.isPlayerAbleToMove=!0}}]),a=this.make.tilemap({key:mapMain_key}),t=[a.addTilesetImage(mapMain_tilesetObjConfig[0].name,mapMain_tilesetObjConfig[0].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[1].name,mapMain_tilesetObjConfig[1].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[2].name,mapMain_tilesetObjConfig[2].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[3].name,mapMain_tilesetObjConfig[3].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[4].name,mapMain_tilesetObjConfig[4].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[5].name,mapMain_tilesetObjConfig[5].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[6].name,mapMain_tilesetObjConfig[6].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[7].name,mapMain_tilesetObjConfig[7].key,16,16),a.addTilesetImage(mapMain_tilesetObjConfig[8].name,mapMain_tilesetObjConfig[8].key,16,16)];let i;this.layer_ground=a.createLayer(mapMainLayers_ID.layer1,t,0,0).setScale(mapMain_scale),this.layer_levels=a.createLayer(mapMainLayers_ID.layer2,t,0,0).setScale(mapMain_scale),this.layer_trunksRoots=a.createLayer(mapMainLayers_ID.layer3,t,0,0).setScale(mapMain_scale),this.layer_train=a.createLayer(mapMainLayers_ID.layer4,t,0,0).setScale(mapMain_scale),this.layer_floor1=a.createLayer(mapMainLayers_ID.layer5,t,0,0).setScale(mapMain_scale),this.layer_fence=a.createLayer(mapMainLayers_ID.layer6,t,0,0).setScale(mapMain_scale),this.layer_vegetationf1=a.createLayer(mapMainLayers_ID.layer7,t,0,0).setScale(mapMain_scale),this.layer_floor2=a.createLayer(mapMainLayers_ID.layer8,t,0,0).setScale(mapMain_scale),this.layer_treetops1=a.createLayer(mapMainLayers_ID.layer9,t,0,0).setScale(mapMain_scale),this.layer_shadowsf2=a.createLayer(mapMainLayers_ID.layer10,t,0,0).setScale(mapMain_scale),this.layer_vegetationf2=a.createLayer(mapMainLayers_ID.layer11,t,0,0).setScale(mapMain_scale),this.layer_buildingsf2=a.createLayer(mapMainLayers_ID.layer12,t,0,0).setScale(mapMain_scale),this.cameras.main.setBounds(0,0,a.widthInPixels*mapMain_scale,a.heightInPixels*mapMain_scale,!0),this.physics.world.setBounds(0,0,a.widthInPixels*mapMain_scale,a.heightInPixels*mapMain_scale),this.scene.run(mainUserInterface),this.scene.bringToTop(mainUserInterface),localStorage.getItem("lastPoint")?(updateStates(),i=this.getOnStorage("lastPoint"),playerState.point_id=this.getOnStorage("lastPoint"),level_data.hit=this.getOnStorage("playerLife"),playerState.point_x=this.getObjectById(playerState.point_id).x*mapMain_scale,playerState.point_y=this.getObjectById(playerState.point_id).y*mapMain_scale,playerState.targetID=void 0,playerState.targetX=void 0,playerState.targetY=void 0,gameState.counter_cityMap=0,gameState.developerSign_step=0):(e.play(),gameState.isPlayerAbleToMove=!1,i=2,localStorage.setItem("lastPoint",2));const r=this.getObjectById(i);gameState.isPlayerAbleToMove=!0,gameState.defaultMotionControls=!1,gameState.accessibleMotionControls=!0,this.createAllNeededAnimation(),this.player=this.physics.add.sprite(Math.floor(r.x*mapMain_scale),Math.floor(r.y*mapMain_scale),userCharacter_objConfig.down.manDown_key).setDepth(2).setScale(character_scale),this.player.setCollideWorldBounds(!0),this.player.body.setSize(4,4),localStorage.getItem("lastPoint")&&this.setLayersDepth(this.getPlayerFloor()),playerState.point_x=this.player.x,playerState.point_y=this.player.y,this.cameras.main.startFollow(this.player),this.cursor=this.input.keyboard.createCursorKeys();a.getObjectLayer(objectsLayers_keys.MapaMainLayer_obj1).objects.forEach((e=>{switch(e.name){case"decision_break":if(2!=e.id){const a=this.add.circle(Math.round(e.x*mapMain_scale),Math.round(e.y*mapMain_scale),.5).setOrigin(0);this.physics.add.existing(a,!0),this.physics.add.overlap(this.player,a,(()=>{if(playerState.point_id!=e.id&&(308==e.id&&0!=gameState.developerSign_step&&(gameState.developerSign_step=0),this.isCompletelyInside(a,this.player))){switch(playerState.point_id=e.id,327!=e.id&&328!=e.id&&329!=e.id&&330!=e.id||!0===gameState.accessibleMotionControls&&(s.classList.remove("active"),gameState.isExploreAble=!0,gameState.accessibleMotionControls=!1,gameState.defaultMotionControls=!0,gameState.explore=!0,document.querySelector(".textBody").innerHTML=`<p>CG_width: ${containerGame_width}</p><p>CG_height: ${containerGame_height}</p>`,this.player.body.setSize(10*mapMain_scale,16*mapMain_scale)),playerState.direction){case"up":this.player.y+=1;break;case"down":this.player.y+=4;break;case"left":this.player.x+=1;break;case"right":this.player.x+=4}if(e.id==playerState.targetID)return this.player.setVelocity(0,0),playerState.isMoving=!1,playerState.direction=void 0,void this.player.anims.stop();this.player.setVelocity(0,0),this.defineRoute()}}))}break;case"explore":const a=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale);a.setOrigin(0),this.physics.add.existing(a,!0),this.physics.add.overlap(this.player,a,(()=>{if(gameState.explore){s.classList.add("active"),gameState.accessibleMotionControls=!0,gameState.defaultMotionControls=!1,gameState.isExploreAble=!0,this.player.body.setSize(4,4);const a=this.getObjectById(e.properties[0].value);console.log(a.y*mapMain_scale);let t=0;switch(this.player.anims.currentAnim.key){case"walk up":if(0==t){t++,gameState.explore=!1,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:1},!1);const e=this.tweens.add({targets:this.player,y:playerState.targetY,duration:500,ease:"Linear",onComplete:()=>{e.destroy(),this.player.y=playerState.targetY,this.player.x<Math.floor(a.x*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:1},!0);const i=this.tweens.add({targets:this.player,y:playerState.targetY,x:Math.floor(a.x*mapMain_scale),duration:750,ease:"Linear",onComplete:()=>{i.destroy(),gameState.isPlayerAbleToMove=!1,t=0,playerState.targetID=a.id,playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:0},!0),this.time.addEvent({delay:1200,callback:()=>gameState.isPlayerAbleToMove=!0,loop:!1})}}).play()},repeat:0,yoyo:!1}).play()}break;case"walk down":if(0==t){t++,gameState.explore=!1,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:1},!1);const e=this.tweens.add({targets:this.player,y:playerState.targetY,duration:500,ease:"Linear",onComplete:()=>{e.destroy(),this.player.y=playerState.targetY,this.player.x<Math.floor(a.x*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:1},!0);const i=this.tweens.add({targets:this.player,y:playerState.targetY,x:Math.floor(a.x*mapMain_scale),duration:750,ease:"Linear",onComplete:()=>{i.destroy(),gameState.isPlayerAbleToMove=!1,t=0,playerState.targetID=a.id,playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:0},!0),this.time.addEvent({delay:1200,callback:()=>gameState.isPlayerAbleToMove=!0,loop:!1})}}).play()},repeat:0,yoyo:!1}).play()}break;case"walk left":if(0==t){t++,gameState.explore=!1,this.player.y<Math.floor(a.y*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:1},!0);const e=this.tweens.add({targets:this.player,y:Math.floor(a.y*mapMain_scale),x:this.player.x,duration:250,ease:"Linear",onComplete:()=>{e.destroy(),this.player.x<Math.floor(a.x*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:1},!0);const i=this.tweens.add({targets:this.player,x:Math.floor(a.x*mapMain_scale),y:this.player.y,duration:750,ease:"Linear",onComplete:()=>{i.destroy(),gameState.isPlayerAbleToMove=!1,t=0,playerState.targetID=a.id,playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:0},!0),this.time.addEvent({delay:1200,callback:()=>gameState.isPlayerAbleToMove=!0,loop:!1})}}).play()},repeat:0,yoyo:!1}).play()}break;case"walk right":if(0==t){t++,gameState.explore=!1,this.player.y<Math.floor(a.y*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:1},!0);const e=this.tweens.add({targets:this.player,y:Math.floor(a.y*mapMain_scale),x:this.player.x,duration:250,ease:"Linear",onComplete:()=>{e.destroy(),this.player.x<Math.floor(a.x*mapMain_scale)?this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:1},!0):this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:1},!0);const i=this.tweens.add({targets:this.player,x:Math.floor(a.x*mapMain_scale),y:this.player.y,duration:750,ease:"Linear",onComplete:()=>{i.destroy(),gameState.isPlayerAbleToMove=!1,t=0,playerState.targetID=a.id,playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:0},!0),this.time.addEvent({delay:1200,callback:()=>gameState.isPlayerAbleToMove=!0,loop:!1})}}).play()},repeat:0,yoyo:!1}).play()}}}}));break;case"developers":const t=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0);this.physics.add.existing(t,!0),this.physics.add.overlap(this.player,t,(()=>{gameState.isDevelopersSignAble||0!=gameState.developerSign_step||(gameState.isDevelopersSignAble=!0,gameState.developerSign_step++)}));break;case"save_point":const i=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0).setDepth(10);this.physics.add.existing(i,!0),this.physics.add.overlap(this.player,i,(()=>{this.getOnStorage("lastPoint")!=e.properties[0].value&&(playerState.lastPoint_id=e.properties[0].value,playerState.isMoving=!1,localStorage.setItem("lastPoint",JSON.stringify(e.properties[0].value)),localStorage.setItem("gameState",JSON.stringify(gameState)),localStorage.setItem("playerState",JSON.stringify(playerState)),this.getOnStorage("playerLife")!=level_data.hit&&localStorage.setItem("playerLife",JSON.stringify(level_data.hit)))}));break;case"level":let r=!1;const l=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0);this.physics.add.existing(l,!0),this.physics.add.overlap(l,this.player,(()=>{if(!r){let a=this.player.x-this.player.width/2,t=this.player.x+this.player.width/2;if(a>l.x&&t<l.x+l.width){if(e.properties[0].value<=JSON.parse(this.getOnStorage("currentLevel")))return;r=!0,gameState.isPlayerAbleToMove=!1,this.sendStringToUI(""),this.time.addEvent({delay:500,callback:()=>{this.song,this.transitToNewScene(level1),this.time.delayedCall(1e3,(()=>gameState.isPlayerAbleToMove=!0))},loop:!1})}}}));break;case"info":const o=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0);this.physics.add.existing(o,!0),this.physics.add.overlap(o,this.player,(()=>this.onInfoElementsOverlap(e)));break;case"fence":const n=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0).setDepth(10);this.physics.add.existing(n,!0),this.physics.add.collider(this.player,n);break;case"cityMap":const y=e,p=y.x*mapMain_scale,h=y.y*mapMain_scale,c=y.width*mapMain_scale,m=y.height*mapMain_scale,_=this.add.rectangle(p,h,c,m).setOrigin(0);this.physics.add.existing(_,!0),this.physics.add.overlap(this.player,_,(()=>{gameState.isTopInformationAble||0!=gameState.counter_cityMap||(gameState.isTopInformationAble=!0,gameState.topInformationType="CityMap",gameState.counter_cityMap++)}));break;default:if(e.rectangle){const a=this.add.rectangle(e.x*mapMain_scale,e.y*mapMain_scale,e.width*mapMain_scale,e.height*mapMain_scale).setDisplayOrigin(0).setDepth(10);this.physics.add.existing(a,!0),this.physics.add.collider(this.player,a)}else if(e.ellipse){const a=this.add.circle(e.x*mapMain_scale,e.y*mapMain_scale,e.height*mapMain_scale/2).setOrigin(0);this.physics.add.existing(a,!0),this.physics.add.collider(this.player,a)}}}));const s=document.getElementById("alternativeMovements"),l=document.getElementById("mute");s.onclick=()=>{if(this.player.setVelocity(0,0),playerState.isMoving=!1,this.player.anims.stop(),s.classList.contains("active"))s.classList.remove("active"),gameState.accessibleMotionControls=!1,gameState.defaultMotionControls=!0;else{if(playerState.lastPoint_id){let e=this.getObjectById(playerState.lastPoint_id).x*mapMain_scale,a=this.getObjectById(playerState.lastPoint_id).y*mapMain_scale;updateStates(),this.player.x=e,this.player.y=a,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:0},!0),gameState.accessibleMotionControls=!0,gameState.defaultMotionControls=!1}s.classList.add("active")}},l.onclick=()=>{l.classList.toggle("active");const e=document.querySelector("#mute_icon");e.classList.toggle("fa-volume-high"),e.classList.toggle("fa-volume-xmark"),1==this.sound.volume?this.sound.volume=0:this.sound.volume=1}}update(){document.querySelector(".textBody").innerHTML=`<p>DEV_STEP:  ${gameState.developerSign_step}</p><p>DEV ABLE:  ${gameState.isDevelopersSignAble}</p>`,gameState.accessibleMotionControls&&this.alternativeCharacterMoveControl(),gameState.defaultMotionControls&&this.handleMainCharacterMovements(),gameState.isTopInformationVisible&&!gameState.isGuapimirimSignAble&&this.cursor.space.isDown&&(gameState.isGuapimirimSignAble=!0,gameState.isTopInformationVisible=!1),playerState.floor!=this.getPlayerFloor()&&this.setLayersDepth(this.getPlayerFloor()),gameState.isDevelopersSignAble&&this.darkenScreen()}darkenScreen(){gameState.isDevelopersSignOn?2==gameState.developerSign_step&&(this.cameras.main.fadeFrom(1e3,0,0,0),gameState.developerSign_step++,gameState.isDevelopersSignOn=!1,gameState.isDevelopersSignAble=!1):this.cameras.main.fadeOut(1e3,0,0,0)}sendStringToUI(e){userIterfaceState.text=e}getObjectById(e){const a=this.make.tilemap({key:mapMain_key}).getObjectLayer(objectsLayers_keys.MapaMainLayer_obj1);if(!a)return console.error("Camada de objetos não encontrada."),null;return a.objects.find((a=>a.id===e))}handleMainCharacterMovements(){gameState.isPlayerAbleToMove?(this.cursor.up.isDown?(this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:0},!0),this.player.setVelocity(0,-character_velocity)):this.cursor.down.isDown?(this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play(userCharacter_animationsKey.walk_down.key,!0),this.player.setVelocity(0,character_velocity)):this.cursor.left.isDown?(this.player.key=userCharacter_objConfig.left.manLeft_key,this.player.play(userCharacter_animationsKey.walk_left.key,!0),this.player.setVelocity(-character_velocity,0)):this.cursor.right.isDown?(this.player.key=userCharacter_objConfig.right.manRight_key,this.player.play(userCharacter_animationsKey.walk_right.key,!0),this.player.setVelocity(character_velocity,0)):this.player.setVelocity(0),!this.isScrolling&&this.cursor.up.isDown?(this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:0},!0),this.player.setVelocityY(-100)):!this.isScrolling&&this.cursor.down.isDown&&(this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play(userCharacter_animationsKey.walk_down.key,!0),this.player.setVelocityY(100))):this.player.setVelocity(0)}createAllNeededAnimation(){const e={key:userCharacter_animationsKey.walk_up.key,frames:this.anims.generateFrameNumbers(userCharacter_objConfig.up.manUp_key,{frame:[0,1,2,3]}),frameRate:character_AnimationFrameRate,repeat:0};this.anims.create(e);const a={key:userCharacter_animationsKey.walk_left.key,frames:this.anims.generateFrameNumbers(userCharacter_objConfig.left.manLeft_key,{frame:[0,1,2,3]}),frameRate:character_AnimationFrameRate,repeat:0};this.anims.create(a);const t={key:userCharacter_animationsKey.walk_right.key,frames:this.anims.generateFrameNumbers(userCharacter_objConfig.right.manRight_key,{frame:[0,1,2,3]}),frameRate:character_AnimationFrameRate,repeat:0};this.anims.create(t);const i={key:userCharacter_animationsKey.walk_down.key,frames:this.anims.generateFrameNumbers(userCharacter_objConfig.down.manDown_key,{frame:[0,1,2,3]}),frameRate:character_AnimationFrameRate,repeat:0};this.anims.create(i);const r={key:lifeBart_animationsKey.heart_full.key,frames:this.anims.generateFrameNumbers(lifeBar.lifeBar_key,{start:4,end:0}),frameRate:5,repeat:0};this.anims.create(r);const s={key:lifeBart_animationsKey.heart_half.key,frames:this.anims.generateFrameNumbers(lifeBar.lifeBar_key,{start:0,end:2}),frameRate:3,repeat:0};this.anims.create(s);const l={key:lifeBart_animationsKey.heart_empty.key,frames:this.anims.generateFrameNumbers(lifeBar.lifeBar_key,{start:2,end:4}),frameRate:3,repeat:0};this.anims.create(l)}getPlayerFloor(e=this.player.x,a=this.player.y){const t=321*mapMain_scale,i=559*mapMain_scale,r=770*mapMain_scale,s=1248*mapMain_scale;return this.player.x>r&&this.player.x<s&&this.player.y>t&&this.player.y<i?"floor_2":"floor_1"}setLayersDepth(e){"floor_1"==e?(this.layer_ground.setDepth(0),this.layer_levels.setDepth(0),this.layer_trunksRoots.setDepth(0),this.layer_train.setDepth(0),this.layer_floor1.setDepth(0),this.layer_fence.setDepth(0),this.layer_vegetationf1.setDepth(3),this.layer_floor2.setDepth(3),this.layer_treetops1.setDepth(3),this.layer_shadowsf2.setDepth(3),this.layer_vegetationf2.setDepth(3),this.layer_buildingsf2.setDepth(3),this.player.setDepth(2),playerState.floor="floor_1"):"floor_2"==e&&(this.layer_ground.setDepth(0),this.layer_levels.setDepth(0),this.layer_trunksRoots.setDepth(0),this.layer_train.setDepth(0),this.layer_floor1.setDepth(1),this.layer_fence.setDepth(1),this.layer_vegetationf1.setDepth(1),this.layer_floor2.setDepth(1),this.layer_treetops1.setDepth(3),this.layer_shadowsf2.setDepth(1),this.layer_vegetationf2.setDepth(1),this.layer_buildingsf2.setDepth(3),this.player.setDepth(2),playerState.floor="floor_2")}onInfoElementsOverlap(e){"placa"==e.properties[1].value&&this.sendStringToUI(e.properties[0].value)}transitToNewScene(e){this.cameras.main.fadeOut(1e3,0,0,0),this.cameras.main.once("camerafadeoutcomplete",(a=>{this.scene.start(e)}))}alternativeCharacterMoveControl(){if(gameState.isPlayerAbleToMove)if(this.cursor.up.isDown&!playerState.isMoving){this.player.y=Math.floor(this.player.y);const e=this.getObjectById(playerState.point_id).properties.find((e=>"up"===e.name));if(!e.value)return void console.error("caminho inexistente ! você está se equivocando");const a=this.getObjectById(e.value);playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),playerState.targetID=e.value,this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:-1},!0),this.player.setVelocity(0,-character_velocity),playerState.isMoving=!0,playerState.direction="up"}else if(this.cursor.down.isDown&!playerState.isMoving){this.player.y=Math.floor(this.player.y);const e=this.getObjectById(playerState.point_id).properties.find((e=>"down"===e.name));if(!e.value)return;const a=this.getObjectById(e.value);playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),playerState.targetID=e.value,this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:-1},!0),this.player.setVelocity(0,character_velocity),playerState.isMoving=!0,playerState.direction="down"}else if(this.cursor.left.isDown&!playerState.isMoving){this.player.x=Math.floor(this.player.x);const e=this.getObjectById(playerState.point_id).properties.find((e=>"left"===e.name));if(!e.value)return;const a=this.getObjectById(e.value);playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),playerState.targetID=e.value,this.player.key=userCharacter_objConfig.left.manLeft_key,this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:-1},!0),this.player.setVelocity(-character_velocity,0),playerState.isMoving=!0,playerState.direction="left"}else if(this.cursor.right.isDown&!playerState.isMoving){this.player.x=Math.floor(this.player.x);const e=this.getObjectById(playerState.point_id).properties.find((e=>"right"===e.name));if(!e.value)return;const a=this.getObjectById(e.value);playerState.targetX=Math.floor(a.x*mapMain_scale),playerState.targetY=Math.floor(a.y*mapMain_scale),playerState.targetID=e.value,this.player.key=userCharacter_objConfig.right.manRight_key,this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:-1},!0),this.player.setVelocity(character_velocity,0),playerState.isMoving=!0,playerState.direction="right"}}defineRoute(){switch(playerState.direction){case"up":this.player.y<=playerState.targetY+8&&this.player.y>=playerState.targetY+8?(playerState.direction="up",this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:-1},!0),this.player.setVelocity(0,-character_velocity)):this.player.x>playerState.targetX?(playerState.direction="left",this.player.key=userCharacter_objConfig.left.manLeft_key,this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:-1},!0),this.player.setVelocity(-character_velocity,0)):(playerState.direction="right",this.player.key=userCharacter_objConfig.right.manRight_key,this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:-1},!0),this.player.setVelocity(character_velocity,0));break;case"down":this.player.y<=playerState.targetY+8&&this.player.y>=playerState.targetY+8?(playerState.direction="down",this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:-1},!0),this.player.setVelocity(0,character_velocity)):this.player.x>playerState.targetX?(playerState.direction="left",this.player.key=userCharacter_objConfig.left.manLeft_key,this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:-1},!0),this.player.setVelocity(-character_velocity,0)):(playerState.direction="right",this.player.key=userCharacter_objConfig.right.manRight_key,this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:-1},!0),this.player.setVelocity(character_velocity,0));break;case"left":this.player.x<=playerState.targetX+8&&this.player.x>=playerState.targetX+8?(playerState.direction="left",this.player.key=userCharacter_objConfig.left.manLeft_key,this.player.play({key:userCharacter_animationsKey.walk_left.key,repeat:-1},!0),this.player.setVelocity(-character_velocity,0)):this.player.y>playerState.targetY?(playerState.direction="up",this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:-1},!0),this.player.setVelocity(0,-character_velocity)):(playerState.direction="down",this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:-1},!0),this.player.setVelocity(0,character_velocity));break;case"right":this.player.x<=playerState.targetX+8&&this.player.x>=playerState.targetX+8?(playerState.direction="right",this.player.key=userCharacter_objConfig.right.manRight_key,this.player.play({key:userCharacter_animationsKey.walk_right.key,repeat:-1},!0),this.player.setVelocity(character_velocity,0)):this.player.y>playerState.targetY?(playerState.direction="up",this.player.key=userCharacter_objConfig.up.manUp_key,this.player.play({key:userCharacter_animationsKey.walk_up.key,repeat:-1},!0),this.player.setVelocity(0,-character_velocity)):this.player.y<playerState.targetY&&(playerState.direction="down",this.player.key=userCharacter_objConfig.down.manDown_key,this.player.play({key:userCharacter_animationsKey.walk_down.key,repeat:-1},!0),this.player.setVelocity(0,character_velocity))}}isCompletelyInside(e,a){return e.x>=a.x-2&&e.y>=a.y-2&&e.x+e.width<=a.x-2+a.width&&e.y+e.height<=a.y-2+a.height}getOnStorage(e){return JSON.parse(localStorage.getItem(e))}}export{MapaMain};